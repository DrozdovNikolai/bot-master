name: Python Telegram Bot CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        echo "Running tests..."
        # Добавьте команды для запуска ваших тестов здесь123

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 .

    - name: Build Podman image
      run: |
        podman build -t myusername/telegram-bot:${{ github.sha }} .
        podman tag myusername/telegram-bot:${{ github.sha }} myusername/telegram-bot:latest

    - name: Push Podman image
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | podman login docker.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        podman push myusername/telegram-bot:${{ github.sha }}
        podman push myusername/telegram-bot:latest

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Deploy
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
        podman pull myusername/telegram-bot:latest
        podman stop telegram_bot || true
        podman rm telegram_bot || true
        podman run -d --name telegram_bot --network="host" -p 5000:5000 myusername/telegram-bot:latest
        EOF
